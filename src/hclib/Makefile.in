#
# Copyright (c) 2011 - 2016
#  University of Houston System and UT-Battelle, LLC.
# Copyright (c) 2009 - 2016
#  Silicon Graphics International Corp.  SHMEM is copyrighted
#  by Silicon Graphics International Corp. (SGI) The OpenSHMEM API
#  (shmem) is released by Open Source Software Solutions, Inc., under an
#  agreement with Silicon Graphics International Corp. (SGI).
#
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# o Redistributions of source code must retain the above copyright notice,
#   this list of conditions and the following disclaimer.
#
# o Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in the
#   documentation and/or other materials provided with the distribution.
#
# o Neither the name of the University of Houston System,
#   UT-Battelle, LLC. nor the names of its contributors may be used to
#   endorse or promote products derived from this software without specific
#   prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
# TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
# PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
# LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
# NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#


# ---------------------------------------------------------

COMMS_DIR        =     ../comms
COMMS_CPPFLAGS   =    -I$(COMMS_DIR)

MEMORY_CPPFLAGS  =    -I../memory
UTHASH_CPPFLAGS  =    -I../uthash
UTILS_CPPFLAGS   =    -I../utils
UPDOWN_CPPFLAGS  =    -I../updown
PTP_CPPFLAGS     =    -I../ptp
ATOMIC_CPPFLAGS  =    -I../atomic
GLOBALVAR_CPPFLAGS =  -I../globalvar
MALLOC_CPPFLAGS  =    -I../dlmalloc
COLL_CPPFLAGS    =    -I../barrier \
                        -I../barrier-all \
                        -I../broadcast \
                        -I../collect \
                        -I../fcollect

# ---------------------------------------------------------


CC               = @CC@
CFLAGS           = @CFLAGS@
CPPFLAGS         = @CPPFLAGS@
LD               = @LD@
LDFLAGS          = @LDFLAGS@
HCLIB_HEADERS    = @HCLIB_HEADERS@

AR               = ar
ARFLAGS          = cqv
RANLIB           = ranlib

ifeq "@HAVE_FEATURE_DEBUG@" "enabled"
CPPFLAGS        += -DHAVE_FEATURE_DEBUG
endif

ifeq "@HAVE_FEATURE_TRACE@" "enabled"
CPPFLAGS        += -DHAVE_FEATURE_TRACE
endif

ifeq "@HAVE_FEATURE_PSHMEM@" "enabled"
CPPFLAGS        += -DHAVE_FEATURE_PSHMEM
endif

ifeq "@HAVE_FEATURE_EXPERIMENTAL@" "enabled"
CPPFLAGS        += -DHAVE_FEATURE_EXPERIMENTAL
endif

ifeq "@HAVE_FEATURE_HCLIB@" "enabled"
CPPFLAGS        += -DHAVE_FEATURE_HCLIB
endif

-include $(COMMS_DIR)/comms.mak

CPPFLAGS        += -I. -I..
CPPFLAGS        += $(COMMS_CPPFLAGS)
CPPFLAGS        += $(MEMORY_CPPFLAGS)
CPPFLAGS        += $(UTHASH_CPPFLAGS)
CPPFLAGS        += $(UTILS_CPPFLAGS)
CPPFLAGS        += $(UPDOWN_CPPFLAGS)
CPPFLAGS        += $(PTP_CPPFLAGS)
CPPFLAGS        += $(ATOMIC_CPPFLAGS)
CPPFLAGS        += $(GLOBALVAR_CPPFLAGS)
CPPFLAGS        += $(MALLOC_CPPFLAGS)
CPPFLAGS        += $(COLL_CPPFLAGS)
CPPFLAGS        += $(HCLIB_HEADERS)

CFLAGS          += @PICFLAGS@
CFLAGS          += @WARNFLAGS@

.PHONY: clean

SOURCES  = $(wildcard *.c)
OBJECTS  = $(SOURCES:.c=.o)

build-stamp:	$(OBJECTS)
	touch $@

clean:
	rm -f $(OBJECTS) build-stamp
